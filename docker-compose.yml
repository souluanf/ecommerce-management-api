services:

  ecommerce.mysql:
    container_name: ecommerce.mysql
    hostname: ecommerce.mysql
    image: mysql:8.0
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    ports:
      - "${DATABASE_PORT}:3306"
    networks:
      - ecommerce-network
    volumes:
      - ecommerce-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DATABASE_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  ecommerce.elasticsearch:
    container_name: ecommerce.elasticsearch
    hostname: ecommerce.elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - ecommerce-network
    volumes:
      - ecommerce-elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  ecommerce.kafka:
    container_name: ecommerce.kafka
    hostname: ecommerce.kafka
    image: confluentinc/cp-kafka:latest
    networks:
      - ecommerce-network
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ecommerce.kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://ecommerce.kafka:29092,CONTROLLER://ecommerce.kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@ecommerce.kafka:29093
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    volumes:
      - ecommerce-kafka-data:/tmp/kraft-combined-logs
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  ecommerce.kafka-ui:
    container_name: ecommerce.kafka-ui
    hostname: ecommerce.kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8056:8080"
    networks:
      - ecommerce-network
    depends_on:
      ecommerce.kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ecommerce.kafka:29092
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped


  ecommerce.app:
    container_name: ecommerce.app
    hostname: ecommerce.app
    env_file:
      - .env
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - ecommerce-network
    depends_on:
      ecommerce.mysql:
        condition: service_healthy
      ecommerce.elasticsearch:
        condition: service_healthy
      ecommerce.kafka:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ecommerce-management/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

networks:
  ecommerce-network:
    name: ecommerce-network
    driver: bridge

volumes:
  ecommerce-mysql-data:
    driver: local
  ecommerce-elasticsearch-data:
    driver: local
  ecommerce-kafka-data:
    driver: local